#!/bin/bash
# produire_nbargs called with wrong number of args sw after refactoring of nb of args.
# find and correct
#refactor if necessary and prudent
#[ $(

: <<'COMMENTEDOUT'
VRAI=0
FAUX=1
prudent(){
if test $(cd $(find ~ -name 'generer_fonction' -type d) && \
grep -r -P 'produire_nbargs [a-zA-Z_$\"]+$' |wc --lines)\
 -eq 1; then
#echo "prudent"
return "$VRAI"
else
#echo "pas prudent"
return "$FAUX"
fi
}

necessaire(){
#dnw. previous idea with sentinel files dnw either (filebomb, racecond)
#@maybe refactor lib after this one?
[ $(grep -r -P 'produire_nbargs [a-zA-Z_\"$]+$' --files-with-match   |wc) -neq 0 ]  && mmm "necessaire: ai trouvé un appel avec un seul param " && return "$VRAI"
echo "pas necessaire" && return "$FAUX"
}

corriger_appel_de_produire_nbargs(){
longue_vue=$(grep -r -P -B 10 'produire_nbargs [a-zA-Z_$\"]+$')
chaine_eronnee="$(grep -r -P 'produire_nbargs [a-zA-Z$\"]+$' --no-filename)"
# sed grymoire correct in place
#sed 's/'"$chaine_eronnee"'/produire_nbargs \"\$PARAMS\" \"\$NOM_FONC\"/;' $(grep -r -P 'produire_nbargs [a-zA-Z$\"]+$' --files-with-matches)
sed --in-place=.bak 's/'"$chaine_eronnee"'/produire_nbargs \"\$PARAMS\" \"\$NOM_FONC\"/;' $(grep -r -P 'produire_nbargs [a-zA-Z$\"]+$' --files-with-matches)

#) -eq 1 ] && mmm "prudent"
}

#prudent && necessaire && corriger_appel_de_produire_nbargs
necessaire
prudent && necessaire && corriger_appel_de_produire_nbargs
COMMENTEDOUT

: <<'COMMENT'
for f in $(find . -type f ! -path '*.txt' ! -path '*.swp' !  -path '*.git*' ); do 
echo "trying $f"
#sed -n 's/source \([a-z]+\)/declare -f \1 \|\| source \1 / p;' "${f}"
grep  'source' $f
done
COMMENT
: <<'COMMENT'
for f in $(find . -type f ! -path '*.txt' ! -path '*.swp' !  -path '*.git*' ); do 
sed  's/declare -F \([a-zA-Z_&\"]+\)/declare -F \1 2>\&1 /;' $f 
done
COMMENT

#no journald-cat! it sis systemd-cat !
# verif de la norme
#type systemd-cat && echo "existe"
#type journald-cat || echo "existe pas"
#grep -r -P 'systemd-cat' 
# selection des fichiers
#grep -r -P 'journald-cat' --files-with-matches --exclude=*.txt
# decompte good/bad
#grep -r -P 'systemd-cat' |wc --lines
#grep -r -P 'journald-cat' |wc --lines
#selection des lignes
#grep -r -P 'journald-cat' --no-filename
# essai mise en place d un placeholder + correction dans le flux
#grep -r -P 'journald-cat' --no-filename --exclude=*.txt |sed 's/journald-cat/PH/;' | sed 's/PH/systemd-cat/;'
#  il faut maintenant corriger chaque fichier sur site.
# - sed peut corriger sur site avec sed --in_place=.backup MODIF NOMFICHIER
# faire un point git avant appli du patch
# grep peut fournir  le nom des fichiers
# xargs devrait rendre possible l utilisation de commandes  a->"a b c d" x xargs x bb ->  bb x a; bbx b; bbxc...
#marche pas et variante de grep differente
#echo "a b c d" |xargs echo 
# en fait xargs regroupe les multiples sorties en une ligne donc exploitable par bcle for ensuite
#grep -r -P 'journald-cat' --files-with-matches --exclude=*.txt |xargs echo
#type parallel || echo pas installe
# il existe xe comme alt à xargs, mais aussi apply (pas trv deb)
# il existe parafly et paexec comme alternative à parallel
#grep -r -P 'journald-cat' --files-with-matches --exclude=*.txt |parallel -j+0 'sed --in-place=.bkp "s/journald-cat/systemd-cat/;" {}'
# il n y a plus qu a faire un in-place
